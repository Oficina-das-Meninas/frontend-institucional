name: Deploy Frontend Angular na VM

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Selecione o ambiente'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositÃ³rio
      uses: actions/checkout@v4

    - name: Configurar Node.js (LTS)
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Instalar dependÃªncias
      run: npm ci

    - name: Build Angular
      run: |
        if [[ "${{ github.event.inputs.ENVIRONMENT }}" == "development" ]]; then
          BASE_HREF="/${{ vars.SERVER_DIR_DEV }}"
        else
          BASE_HREF="/${{ vars.SERVER_DIR_PRD }}"
        fi

        npm run build -- --base-href $BASE_HREF --output-hashing=all --configuration=${{ github.event.inputs.ENVIRONMENT }}

    - name: Upload build como artefato
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: dist/angular-app/


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Baixar artefato da build
      uses: actions/download-artifact@v4
      with:
        name: frontend-dist
        path: dist


    - name: Configurar SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ vars.VM_HOST }} >> ~/.ssh/known_hosts

    - name: Debug arquivos do build
      run: ls -R dist/

    - name: Enviar arquivos para VM
      run: |
        if [[ "${{ github.event.inputs.ENVIRONMENT }}" == "development" ]]; then
          DEST_DIR=${{ vars.VM_DIR_DEV }}
        else
          DEST_DIR=${{ vars.VM_DIR_PRD }}
        fi

        echo "ðŸ“¤ Enviando arquivos para ${{ vars.VM_USER }}@${{ vars.VM_HOST }}:$DEST_DIR ..."
        rsync -avz --delete dist/ ${{ vars.VM_USER }}@${{ vars.VM_HOST }}:$DEST_DIR
